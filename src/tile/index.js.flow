/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
// @flow
import * as React from 'react';
import type { IconPropsT } from '../icon/types.js'
import type { OverrideT } from '../helpers/overrides.js';
import { type StyletronComponent } from 'styletron-react';

declare export var TILE_KIND: {
  selection: 'selection',
  action: 'action',
};

declare export var ARTWORK_SIZES: {
  medium: 'medium',
  large: 'large',
};

declare export var ALIGNMENT: {
  left: 'left',
  center: 'center',
  right: 'right',
};

declare export var TILE_GROUP_KIND: {
  singleSelect: 'singleSelect',
  multiSelectBatch: 'multiSelectBatch',
  multiSelectLive: 'multiSelectLive',
  none: 'none',
};

export type TileOverridesT = {
  Root?: OverrideT,
  HeaderContainer?: OverrideT,
  BodyContainer?: OverrideT,
  BodyContainerContent?: OverrideT,
  LeadingContent?: OverrideT,
  TrailingContent?: OverrideT,
  Label?: OverrideT,
  ContentBody?: OverrideT,
};

export type TileKind = $Values<typeof TILE_KIND>;

export type TileGroupOverridesT = {
  Root?: OverrideT,
  Toggle?: OverrideT,
  ToggleTrack?: OverrideT,
  Checkmark?: OverrideT,
  RadioMarkOuter?: OverrideT,
  RadioMarkInner?: OverrideT,
};

export type TilePropsT = {
  tileKind: $Values<typeof TILE_KIND>,
  children?: React.Node,
  label?: string | React.ComponentType<{}>,
  leadingContent?: React.ComponentType<{}>,
  trailingContent?: React.ComponentType<{}>,
  headerAlignment?: $Values<typeof ALIGNMENT>,
  bodyAlignment?: $Values<typeof ALIGNMENT>,
  disabled?: boolean,
  selected?: boolean,
  onClick?: (SyntheticEvent<HTMLButtonElement>) => mixed,
  overrides?: TileOverridesT,
};

export type TileGroupPropsT = {
  ariaLabel?: string;
  kind?: $Values<typeof TILE_GROUP_KIND>,
  disabled?: boolean,
  onClick?: (SyntheticEvent<HTMLButtonElement>) => mixed,
  selected?: number | Array<number>,
  children: Array<React.Node>,
  overrides?: TileGroupOverridesT,
};

declare export var StyledTileRoot: StyletronComponent<
  'button',
  { $tileType: $Values<typeof TILE_KIND>, $selected: boolean }
>;

declare export var StyledTileGroupRoot: StyletronComponent<'div', { $length: number }>;

declare export var StyledHeaderContainer: StyletronComponent<'div', { $leadingContent?: boolean }>;

declare export var StyledLeadingContentContainer: StyletronComponent<'div', {}>;

declare export var StyledTrailingContentContainer: StyletronComponent<'div', {}>;

declare export var StyledBodyContainer: StyletronComponent<'div', {}>;

declare export var StyledBodyContainerContent: StyletronComponent<'div', {}>;

declare export var StyledLabel: StyletronComponent<'p', { $disabled?: boolean }>;

declare export var StyledParagraph: StyletronComponent<'p', { $disabled?: boolean }>;
