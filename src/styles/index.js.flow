/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
// @flow

import * as React from 'react';
import type { ComponentType } from 'react';
import type {
  Globals,
  LineStyle,
  ColorTokensT,
  ComponentColorTokensT,
  SemanticColorTokensT,
  AnimationT,
  BreakpointsT,
  BorderT,
  BordersT,
  FontT,
  GridT,
  LightingT,
  MediaQueryT,
  SizingT,
  TypographyT,
  ZIndexT,
} from '../themes';
import type { IconPropsT } from '../icon';

export type {
  AnimationT,
  BreakpointsT,
  BorderT,
  BordersT,
  FontT as Font,
  GridT,
  LightingT,
  MediaQueryT,
  SizingT,
  TypographyT,
  ZIndexT,
};

export type ColorsT = {
  ...ColorTokensT,
  ...ComponentColorTokensT,
  ...SemanticColorTokensT,
};

export type ThemeT = {|
  name: string,
  animation: AnimationT,
  borders: BordersT,
  breakpoints: BreakpointsT,
  colors: ColorsT,
  direction: 'auto' | 'rtl' | 'ltr',
  grid: GridT,
  icons?: IconT,
  lighting: LightingT,
  mediaQuery: MediaQueryT,
  sizing: SizingT,
  typography: TypographyT,
  zIndex: ZIndexT,
  // Remove this section in next v11 major version
  // https://github.com/uber/baseweb/pull/1184
  tooltip?: {
    backgroundColor: string,
  },
  // ^^^^^^^
|};

export type IconT = {
  Alert?: ComponentType<IconPropsT>,
  ArrowDown?: ComponentType<IconPropsT>,
  ArrowLeft?: ComponentType<IconPropsT>,
  ArrowRight?: ComponentType<IconPropsT>,
  ArrowUp?: ComponentType<IconPropsT>,
  Blank?: ComponentType<IconPropsT>,
  CheckIndeterminate?: ComponentType<IconPropsT>,
  Check?: ComponentType<IconPropsT>,
  ChevronDown?: ComponentType<IconPropsT>,
  ChevronUp?: ComponentType<IconPropsT>,
  ChevronLeft?: ComponentType<IconPropsT>,
  ChevronRight?: ComponentType<IconPropsT>,
  DeleteAlt?: ComponentType<IconPropsT>,
  Delete?: ComponentType<IconPropsT>,
  Filter?: ComponentType<IconPropsT>,
  Grab?: ComponentType<IconPropsT>,
  Hide?: ComponentType<IconPropsT>,
  Menu?: ComponentType<IconPropsT>,
  Overflow?: ComponentType<IconPropsT>,
  Plus?: ComponentType<IconPropsT>,
  Search?: ComponentType<IconPropsT>,
  Show?: ComponentType<IconPropsT>,
  Spinner?: ComponentType<IconPropsT>,
  TriangleDown?: ComponentType<IconPropsT>,
  TriangleLeft?: ComponentType<IconPropsT>,
  TriangleRight?: ComponentType<IconPropsT>,
  TriangleUp?: ComponentType<IconPropsT>,
  Upload?: ComponentType<IconPropsT>,
};

declare export var ThemeContext: React.Context<ThemeT>;
export {
  createThemedStyled,
  createThemedWithStyle,
  createThemedUseStyletron,
  styled,
  withStyle,
  useStyletron,
  withWrapper,
} from './styled';

declare export function hexToRgb(hex?: string, alpha?: string): ?string;

declare export function expandBorderStyles(borderStyles: BorderT): {|
  borderTopStyle: Globals | LineStyle,
  borderTopWidth: string,
  borderTopColor: string,
  borderBottomWidth: string,
  borderBottomStyle: Globals | LineStyle,
  borderBottomColor: string,
  borderLeftWidth: string,
  borderLeftStyle: Globals | LineStyle,
  borderLeftColor: string,
  borderRightWidth: string,
  borderRightStyle: Globals | LineStyle,
  borderRightColor: string,
|};

declare export var ThemeProvider: React.StatelessFunctionalComponent<{
  theme: ThemeT,
  children: ?React.Node,
}>;
declare export var ThemeConsumer: typeof ThemeContext.Consumer;
